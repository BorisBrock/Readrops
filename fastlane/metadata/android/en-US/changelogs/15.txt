## General

- ðŸ†• design:
  - ðŸ†• Material3: Readrops implements last material design system version
  - ðŸ†• Bottom bar navigation: you can now navigate to feeds and account management way more easily, with 4 tabs in total:
    - Timeline
    - Feeds
    - Account
    - More
  - Timeline tab:
    - ðŸ†• Article size: you can now choose among three article sizes: compact, regular and large
    - ðŸ†• You can now show only articles less than 24h old
    - ðŸ†• Mark all articles as read FAB: the floating action button now lets you mark all articles read, taking into account the current filter, replacing opening new feed activity action
    - ðŸ†• Mark articles read on scroll: an option is now available to mark items read on scroll
    - ðŸ†• Drawer: hide folders and feeds without unread articles
    - ðŸ†• Local account: sync now respects the current filter and will only synchronize affected feeds
  - Feeds Tab:
    - ðŸ†• Feeds and folder management have been merged into a single screen
  - Account Tab:
    - ðŸ†• Add, manage and remove any account from Account Tab
  - More Tab:
    - ðŸ†• This new screen gathers some app infos, parameters, open source libraries and a donation dialog
  - Articles screen:
    - The global UI has been improved with a new title layout
    - ðŸ†• Action bottom bar: you now have access to a collapsable bottom bar containing the following actions:
      - Mark as read/non read
      - Add to favorites/remove from favorites
      - Share
      - Open in external navigator/navigator view
    - ðŸ†• A new font, Inter is used for the article content
    - ðŸ†• Some html tags look have been improved:
      - blockquote
      - figure/figcaption
      - iframe
      - table
    - "Open in" option has been reduced to two options: navigator view and external navigator
- ðŸ†• FEVER API implementation, should work with any provider which supports it
- Migrate to Nextcloud News API 1.3
- ðŸ†• Follow system theme option (default)
- ðŸ†• Option to disable battery optimization for background synchronization

## Technical

- The UI has been entirely rewritten in Kotlin using Jetpack Compose, moving from old traditional view system
- All other Java parts have also been rewritten in Kotlin, including API implementations, repositories, etc
- RXJava was replaced by Kotlin coroutines and flows
- Migrate to Gradle Kotlin DSL
- Migrate dependencies to Version Catalog
- ðŸ†• Support user certificates